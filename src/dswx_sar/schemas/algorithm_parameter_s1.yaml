runconfig:
    name: str()

    processing:
        # Algorithms for surface water extents
        # ['opera_dswx_s1', 'twele', 'opera_dswx_s1_inundated_vegetation']
        dswx_workflow: str(required=False)

        # Polarizations to be used for DSWx-SAR
        # [polarizations] for list of specific frequency(s) e.g. [VV, VH] or [VV]
        polarizations: any(list(str(min=2, max=10), min=1, max=4), str(min=4, max=4), null(), required=False)

        # Specifiy the max_value for permanent water and no_data_value for invalid pixels
        reference_water:
            max_value: num(required=False)
            no_data_value: num(required=False)
            permanent_water_value: num(required=False)
            drought_erosion_pixel: int(required=False)
            flood_dilation_pixel: int(required=False)

        mosaic:
            mosaic_prefix: str(required=False)
            mosaic_cog_enable: bool(required=False)

        # Flag to turn on/off the filtering for RTC image.
        # The enhanced Lee filter is available.
        filter:
            enabled: bool(required=False)
            window_size: num(min=1, max=999, required=False)

        initial_threshold:
            # Maximum tile size for initial threshold.
            maximum_tile_size:
                x: num(required=False)
                y: num(required=False)
            # minimum tile size for initial threshold.
            minimum_tile_size:
                x: num(required=False)
                y: num(required=False)

            # tile selecting strategy to identify the boundary between water and nonwater
            # ['twele', 'chini', 'bimodality', 'combined']
            # 'combined' option applies all selection strategy
            selection_method: str(required=False)
            # Strategy to interpolate the tile-based thresholds.
            # Currently, only 'smoothed' is available.
            tile_selection_twele: list(required=False)
            tile_selection_bimodality: num(required=False)

            extending_method: str(required=False)
            # Thresholding algorithm for initial thresholds.
            # Currently, 1) Otsu and 2) Kittler-Illingworth algorithms are available.
            # ['otsu', 'ki']
            threshold_method: str(required=False)
            # Flag to assume the trimodal distribution.
            # If flag is false, the distribution is assumed to have bimodal distribution and
            # estimate single threshold per tile. If True, the trimodal distribution is assumed,
            # the lowest threshold is estimated.
            multi_threshold: bool(required=False)
            tile_average: bool(required=False)
            number_iterations: num(required=False)
            number_cpu: num(required=False)

        fuzzy_value:
            # hand value to mask out
            hand_maximum: num(required=False)
            # membership bound for slope angle
            slope:
                member_min: num(required=False)
                member_max: num(required=False)
            # membership bound for reference water                
            reference_water:
                # Minimum reference water value for membership
                member_min: num(required=False)
                # Maximum reference water value for membership
                member_max: num(required=False)
            # Dark area is defined where cross-pol is lower than cross_land
            # Water is defined where cross-pol is lower than cross_water
            dark_area:
                # Threshold [dB] for land in the dark area definition
                cross_land: num(required=False)
                # Threshold [dB] for water in the dark area definition
                cross_water: num(required=False)
            # High frequent water is defined based on two values
            # water_min_value < high_frequent_water < water_max_value
            high_frequent_water:
                # Minimum value for high frequent water
                water_min_value: num(required=False)
                # Maximum value for high frequent water
                water_max_value: num(required=False)
                        
        region_growing:
            # seed value for region growing start
            initial_threshold: num(min=0, max=1, required=False)
            # value where region growing is stopped
            relaxed_threshold: num(min=0, max=1, required=False)
            line_per_block: num(min=1, required=False)

        masking_ancillary:
            vv_threshold: num(min=-30, max=10, required=False)
            vh_threshold: num(min=-30, max=10, required=False)
            water_threshold: num(min=0, max=100, required=False)

        refine_with_bimodality:
            minimum_pixel: num(min=0, required=False)

        inundated_vegetation:
            enabled: bool(required=False)
            mode: enum('time_series', 'static_layer')
            temporal_avg_path: str(required=False)
            initial_class_path: str(required=False)
            line_per_block: num(min=1, required=False)

        # debug mode is true, intermeidate product is generated. 
        debug_mode: bool(required=False)